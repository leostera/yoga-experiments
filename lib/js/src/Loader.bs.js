// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Yoga = require("@ostera/reiki/lib/js/src/Yoga.bs.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var YogaBridge$AsdfFlows = require("./YogaBridge.bs.js");

var component = ReasonReact.reducerComponent("Loader");

function fullScreenNode() {
  return Yoga.Node[/* create */0](/* record */[
              /* width */window.visualViewport.width,
              /* height */window.visualViewport.height,
              /* justify_content : Center */1,
              /* flex_direction : Column */0,
              /* align_items : Center */2
            ]);
}

function textNode(node, text) {
  return React.createElement("div", {
              style: YogaBridge$AsdfFlows.project(node, {
                    color: "#eaeaea"
                  })
            }, text);
}

function make(width, height, phase, children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var tmp;
              switch (phase) {
                case 0 : 
                    tmp = textNode(self[/* state */1][/* text_node */1], "Loading...");
                    break;
                case 1 : 
                    tmp = textNode(self[/* state */1][/* text_node */1], "ERROR");
                    break;
                case 2 : 
                    tmp = children;
                    break;
                
              }
              return React.createElement("div", {
                          style: YogaBridge$AsdfFlows.project(self[/* state */1][/* node */0], {
                                backgroundColor: "#403E48"
                              })
                        }, tmp);
            }),
          /* initialState */(function () {
              var text_node = Yoga.Node[/* create */0](/* record */[
                    /* width */70,
                    /* height */20,
                    /* justify_content : Center */1,
                    /* flex_direction : Column */0,
                    /* align_items : Center */2
                  ]);
              return /* record */[
                      /* node */Yoga.Node[/* calculateLayout */2](/* record */[
                            /* width */width,
                            /* height */height,
                            /* direction : Left_to_right */1
                          ], Yoga.Node[/* insertChild */1](text_node, 0, fullScreenNode(/* () */0))),
                      /* text_node */text_node
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var Style = 0;

exports.Style = Style;
exports.component = component;
exports.fullScreenNode = fullScreenNode;
exports.textNode = textNode;
exports.make = make;
/* component Not a pure module */
